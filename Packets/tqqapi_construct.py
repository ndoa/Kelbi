#
# WARNING: THIS FILE IS AUTOGENERATED FROM A CUSTOM TDR RECOMPILER.
# DO NOT MODIFY ANY CODE BELOW THIS LINE DIRECTLY!
#

import enum
from construct import *

TQQ_KEY_LEN = 16
TQQ_MAX_NAME_LEN = 32
TQQ_MAX_IDENT_LEN = 16
TQQ_MAX_SIGN_LEN = 128
TQQ_MAX_SIGN2_LEN = 64
TQQ_IDENT_LEN = 16
TQQ_MAX_USERIDENT_LEN = 64
TQQ_SVCBITMAP_LEN = 12
TQQ_SVCBITMAP_EXT_LEN = 8
TQQ_UNIFIED_MAX_SIGN_LEN = 256
TQQ_UNIFIED_MAX_ENCSIGN_LEN = 128
TQQ_UNIFIED_MAX_ENCSIGN2_LEN = 32
TQQ_UNIFIED_CUSTOMINFO_LEN = 32
TPDU_MAX_ENCRYPTSKEY_LEN = 128
TPDU_MAX_ENCRYPTIDENT_LEN = 64
TPDU_MAX_ENCRYPTSYN_LEN = 128
TPDU_MAX_ENCRYPTSYNACK_LEN = 128
TPDU_MAX_MIBAOBUFFER_LEN = 4096

#: 协议magic
TPDU_MAGIC = 85

#: 客户端协议版本
TPDU_VERSION = 14


class TCONN_SEC_ENC(enum.IntEnum):
    TCONN_SEC_NONE = 0
    TCONN_SEC_TEA = 1
    TCONN_SEC_QQ = 2
    TCONN_SEC_AES = 3
    #: 与TCONN_SEC_AES算法不同的是修改了数据填充算法
    TCONN_SEC_AES2 = 4


class TCONN_SEC_AUTH(enum.IntEnum):
    TCONN_SEC_AUTH_NONE = 0
    TCONN_SEC_AUTH_QQV1 = 1
    TCONN_SEC_AUTH_QQV2 = 2
    TCONN_SEC_AUTH_QQUNIFIED = 3


class TPDU_CMD(enum.IntEnum):
    #: 通信包
    TPDU_CMD_NONE = 0

    #: 交换密钥(下行)
    TPDU_CMD_CHGSKEY = 1

    #: 排队信息(下行)
    TPDU_CMD_QUEINFO = 2

    #: 签名请求信息(上行)
    TPDU_CMD_AUTH = 3

    #: 连接建立(下行)
    TPDU_CMD_IDENT = 4

    #: 未加密通信包(下行)
    TPDU_CMD_PLAIN = 5

    #: 重连请求信息(上行)
    TPDU_CMD_RELAY = 6

    #: 服务器断开连接下发错误码
    TPDU_CMD_STOP = 7

    #: 连接握手信息(下行)
    TPDU_CMD_SYN = 8

    #: 三次握手请求(上行)
    TPDU_CMD_SYNACK = 9

    #: 查询密保返回结果(下行)
    TPDU_CMD_MBA_QUERYRSP = 10

    #: 验证密保请求(上行)
    TPDU_CMD_MBA_VERIFYREQ = 11

    #: 下发密保问题检验结果(下行)
    TPDU_CMD_MBA_VERIFYRSP = 12

    #: 客户端关闭连接通知消息(上行)
    TPDU_CMD_CLOSE = 13

    #: TGC发送的客户端真实地址消息(上行)
    TPDU_CMD_CLIENT_ADDR = 210


class TPDU_RELAY_TYPE(enum.IntEnum):
    """重连类型"""

    #: 跨服跳转
    TPDU_JUMP_SERVER_RELAY = 1

    #: 断线重连
    TPDU_NETWORK_FAILURE_RELAY = 2

    #: 保留值
    TPDU_CLIENT_CRASH_RELAY = 3


class TPDU_STOP_REASON(enum.IntEnum):
    """tconnd内部逻辑断开连接下发的错误码"""

    #: success
    TPDU_REASON_NONE = 0

    #: 连接空闲关闭
    TPDU_REASON_IDLE_CLOSE = 1

    #: 请求包长度异常关闭
    TPDU_REASON_BAD_PKGLEN = 4

    #: 客户端发送速度超过限制
    TPDU_REASON_EXCEED_LIMIT = 5

    #: 逻辑服务器主动下发关闭
    TPDU_REASON_SELF_CLOSE = 7

    #: 客户端连接签名验证失败
    TPDU_REASON_AUTH_FAIL = 8

    #: 客户端三次握手验证失败
    TPDU_REASON_REASON_SYNACK_FAIL = 9

    #: 上行包序列号非法
    TPDU_REASON_SEQUENCE_INVALID = 11

    #: 客户端重连失败
    TPDU_REASON_RELAY_FAIL = 14

    #: 密保处理失败
    TPDU_REASON_MBA_FAIL = 15

    #: 密保返回应答超时
    TPDU_REASON_MBA_TIMEOUT = 16

    #: 连接已达到服务器允许上限
    TPDU_REASON_REACH_LIMIT = 100


#: 0x82签名第一段
TQQGameSig = Struct(
    "GameKey" / Int8sb,
    "SvcBitmap" / Int8sb,
    "SvcBitmapExt" / Int8sb,
    "ValidateBitmap" / Int32ub,
    "Uin" / Int32ub,
    "Time" / Int32ub,
    "UinFlag" / Int32ub,
    "ClientIP" / Int32ub,
)

#: 0x82签名第二段,一般不用
TQQSigForS2 = Struct(
    "Type" / Int8sb,
    "ValidateBitmap" / Int32ub,
    "Uin" / Int32ub,
    "Time" / Int32ub,
    "CltIP" / Int32ub,
)

#: 重连验证字段
TQQUserIdent = Struct(
    "Uin" / Int32ub,
    "Pos" / Int32sb,
    "Ident" / Int8sb,
)

#: 0X82签名协议
TQQAuthInfo = Struct(
    "Uin" / Int32ub,
    "SignLen" / Int8ub,
    "SignData" / Bytes(this.SignLen),
    "Sign2Len" / Int8ub,
    "Sign2Data" / Bytes(this.Sign2Len),
)

#: 0XDE签名协议格式
TQQUnifiedSig = Struct(
    "Version" / Int16sb,
    "Time" / Int32ub,
    "EncryptSignLen" / Int16sb,
    "EncryptSignData" / Bytes(this.EncryptSignLen),
)

#: 0xDE签名协议加密部分
TQQUnifiedEncrySig = Struct(
    "Random" / Int32sb,
    "Version" / Int16sb,
    "uin" / Int32ub,
    "Time" / Int32ub,
    "SSOver" / Int32ub,
    "AppID" / Int32sb,
    "AppClientVer" / Int32sb,
    "ClientIP" / Int32ub,
    "SessionKey" / Int8ub,
    "UnifiedSig2Len" / Int16sb,
    "UnifiedSig2" / Bytes(this.UnifiedSig2Len),
    "CustomInfoLen" / Int16sb,
    "CustomInfoData" / Bytes(this.CustomInfoLen),
)

#: 0XDE签名协议
TQQUnifiedAuthInfo = Struct(
    "Uin" / Int32ub,
    "Len" / Int8ub,
    "SigInfo" / Bytes(this.Len),
)

#: 交换密钥
TPDUExtChgSkey = Struct(
    "Type" / Int16sb,
    "Len" / Int16sb,
    "EncryptSkey" / Bytes(this.Len),
)

#: 排队信息
TPDUExtQueInfo = Struct(
    "Pos" / Int32sb,
    "Max" / Int32sb,
    "WaitTime" / Int32sb,
)

#: 签名数据


def TPDUExtAuthData(selector):
    return Switch(selector, {
        TCONN_SEC_AUTH.TCONN_SEC_AUTH_QQV1: TQQAuthInfo,  # Name:AuthQQV1
        TCONN_SEC_AUTH.TCONN_SEC_AUTH_QQV2: TQQAuthInfo,  # Name:AuthQQV2
        TCONN_SEC_AUTH.TCONN_SEC_AUTH_QQUNIFIED: TQQUnifiedAuthInfo,  # Name:AuthQQUnified
    })


#: 签名请求包
TPDUExtAuthInfo = Struct(
    "EncMethod" / Enum(Int32sb, TCONN_SEC_ENC),
    "ServiceID" / Int32sb,
    "AuthType" / Enum(Int32sb, TCONN_SEC_AUTH),
    "AuthData" / TPDUExtAuthData(selector=lambda this: int(this.AuthType)),
)

#: 连接建立包
TPDUIdentInfo = Struct(
    "Pos" / Int32sb,
    "Ident" / Int8sb,
)

TPDUExtIdent = Struct(
    "Len" / Int32sb,
    "EncryptIdent" / Bytes(this.Len),
)

#: 重连请求包
TPDUExtRelay = Struct(
    "EncMethod" / Enum(Int32sb, TCONN_SEC_ENC),
    "RelayType" / Enum(Int32sb, TPDU_RELAY_TYPE),
    "OldPos" / Int32sb,
    "Len" / Int32sb,
    "EncryptIdent" / Bytes(this.Len),
)

#: 保留,暂未用
TPDUExtStop = Struct(
    "StopReason" / Int32sb,
)

#: 连接握手信息
TPDUSynInfo = Struct(
    "randstr" / Int8sb,
)

TPDUExtSyn = Struct(
    "Len" / Int8ub,
    "EncryptSynInfo" / Bytes(this.Len),
)

#: 三次握手请求信息
TPDUExtSynAck = Struct(
    "Len" / Int8ub,
    "EncryptSynInfo" / Bytes(this.Len),
)

#: 密保相关透传buffer,密文
TPDUExtMiBao = Struct(
    "Len" / Int16ub,
    "MiBaoBuffer" / Bytes(this.Len),
)

#: 客户端真实地址信息
TPDUExtClientAddr = Struct(
    "Uin" / Int32ub,
    "IP" / Int32ub,
    "Port" / Int16ub,
    "ExtInfo" / Int8sb,
)

#: 包头扩展信息


def TPDUExt(selector):
    return Switch(selector, {
        TPDU_CMD.TPDU_CMD_CHGSKEY: TPDUExtChgSkey,  # Name:ChgSkey
        TPDU_CMD.TPDU_CMD_QUEINFO: TPDUExtQueInfo,  # Name:QueInfo
        TPDU_CMD.TPDU_CMD_AUTH: TPDUExtAuthInfo,  # Name:AuthInfo
        TPDU_CMD.TPDU_CMD_IDENT: TPDUExtIdent,  # Name:Ident
        TPDU_CMD.TPDU_CMD_RELAY: TPDUExtRelay,  # Name:Relay
        TPDU_CMD.TPDU_CMD_STOP: TPDUExtStop,  # Name:Stop
        TPDU_CMD.TPDU_CMD_SYN: TPDUExtSyn,  # Name:Syn
        TPDU_CMD.TPDU_CMD_SYNACK: TPDUExtSynAck,  # Name:SynAck
        TPDU_CMD.TPDU_CMD_MBA_QUERYRSP: TPDUExtMiBao,  # Name:MbaQueryRsp
        TPDU_CMD.TPDU_CMD_MBA_VERIFYREQ: TPDUExtMiBao,  # Name:MbaVerifyReq
        TPDU_CMD.TPDU_CMD_MBA_VERIFYRSP: TPDUExtMiBao,  # Name:MbaVerifyRsp
        TPDU_CMD.TPDU_CMD_CLIENT_ADDR: TPDUExtClientAddr,  # Name:ClientAddr
    })


#: version14之前基础包头信息
TPDUBase_Old = Struct(
    "Magic" / Int8ub,
    "Version" / Int8ub,
    "Cmd" / Int8ub,
    "HeadLen" / Int8ub,
    "EncHeadLen" / Int8ub,
    "BodyLen" / Int32sb,
)

#: 基础包头信息
TPDUBase = Struct(
    "Magic" / Int8ub,
    "Version" / Int8ub,
    "Cmd" / Enum(Int8ub, TPDU_CMD),
    "EncHeadLen" / Int8ub,
    "HeadLen" / Int32sb,
    "BodyLen" / Int32sb,
)

#: version14之前的包头
TPDUHead_Old = Struct(
    "Base" / TPDUBase_Old,
    "Ext" / TPDUExt(selector=lambda this: int(this.Base.Cmd)),
)

#: 包头
TPDUHead = Struct(
    "Base" / TPDUBase,
    "Ext" / TPDUExt(selector=lambda this: int(this.Base.Cmd)),
)

#: 附加头部信息,不要定义字符串或者网络序和本地序不等的数据类型
TPDUEncHead = Struct(
    "sequence" / Int32ub,
)

#: CS通信包= 明文:包头(基础信息+扩展信息)+密文:包体(附加头部信息+应用包
TPDUFrame = Struct(
    "Head" / TPDUHead,
    "Body" / Bytes(this.Head.Base.BodyLen),
)
